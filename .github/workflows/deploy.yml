name: Deploy to VPS
on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      # --- PRECHECK: Testa conex√£o SSH ---
      - name: Test SSH connection
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            echo "‚úÖ Conex√£o SSH estabelecida com sucesso!"
            echo "Usu√°rio: $(whoami)"
            echo "Diret√≥rio: $(pwd)"
            echo "Home: $HOME"

      # --- PRECHECK: Cria diret√≥rios remotos ---
      - name: Create remote directories
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e
            REMOTE_PATH="${{ secrets.REMOTE_PATH }}"
            echo "Criando diret√≥rios em: $REMOTE_PATH"
            
            mkdir -p "$REMOTE_PATH/loja-virtual" \
                     "$REMOTE_PATH/admin-frontend" \
                     "$REMOTE_PATH/backend-api"
            
            echo "Estrutura criada:"
            ls -la "$REMOTE_PATH"

      # --- BUILD: Loja Virtual ---
      - name: Build Loja Virtual
        if: ${{ hashFiles('loja-virtual/**') != '' }}
        run: |
          cd loja-virtual
          npm install
          npm run build
        shell: bash

      # --- BUILD: Admin Frontend ---
      - name: Build Admin Frontend
        if: ${{ hashFiles('admin-frontend/**') != '' }}
        run: |
          cd admin-frontend
          npm install
          npm run build
        shell: bash

      # --- UPLOAD: Frontends ---
      - name: Upload store dist
        if: ${{ hashFiles('loja-virtual/dist/**') != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "loja-virtual/dist/*"
          target: "${{ secrets.REMOTE_PATH }}/loja-virtual"
          strip_components: 2

      - name: Upload admin dist
        if: ${{ hashFiles('admin-frontend/dist/**') != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "admin-frontend/dist/*"
          target: "${{ secrets.REMOTE_PATH }}/admin-frontend"
          strip_components: 2

      # --- UPLOAD: Backend ---
      - name: Upload backend
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "backend-api/"
          target: "${{ secrets.REMOTE_PATH }}/backend-api"
          strip_components: 1

      # --- DEPLOY: Backend ---
      - name: Deploy backend
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            set -e
            APP_DIR="${{ secrets.REMOTE_PATH }}/backend-api"
            cd "$APP_DIR"
            
            echo "üìã Verificando ambiente..."
            echo "Node version: $(node -v || echo 'Node n√£o encontrado')"
            echo "NPM version: $(npm -v || echo 'NPM n√£o encontrado')"
            echo "Diret√≥rio: $(pwd)"
            ls -la
            
            # Para processo anterior
            if [ -f app.pid ] && [ -n "$(cat app.pid)" ]; then
              echo "üõë Parando processo anterior..."
              kill $(cat app.pid) 2>/dev/null || true
              sleep 2
            fi
            
            # Instala depend√™ncias
            echo "üì¶ Instalando depend√™ncias..."
            npm ci --omit=dev
            
            # Inicia aplica√ß√£o
            echo "üöÄ Iniciando backend..."
            nohup node index.js > app.out 2> app.err < /dev/null & echo $! > app.pid
            
            # Verifica se subiu
            sleep 3
            if ps -p $(cat app.pid) > /dev/null; then
              echo "‚úÖ Backend iniciado! PID: $(cat app.pid)"
              echo "√öltimas linhas do log:"
              tail -n 10 app.out || true
            else
              echo "‚ùå Falha ao iniciar backend"
              echo "Log de erro:"
              tail -n 50 app.err || true
              exit 1
            fi

      # --- DEPLOY: Frontends (Nginx config) ---
      - name: Setup Nginx (exemplo)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "üéØ Configura√ß√£o de deploy completada!"
            echo "Frontends dispon√≠veis em:"
            echo "- Loja: ${{ secrets.REMOTE_PATH }}/loja-virtual"
            echo "- Admin: ${{ secrets.REMOTE_PATH }}/admin-frontend"
            echo "Backend rodando na porta configurada no index.js"
